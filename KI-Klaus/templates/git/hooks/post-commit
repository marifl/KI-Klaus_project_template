#!/bin/sh

# Get the current branch name
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

# Extract task ID from branch name (format: feature/TASK-123-description)
TASK_ID=$(echo $BRANCH_NAME | grep -oP 'TASK-\d+')

if [ ! -z "$TASK_ID" ]; then
    # Get the commit message
    COMMIT_MSG=$(git log -1 HEAD --pretty=format:%B)
    
    # Extract status from commit message
    STATUS=$(echo "$COMMIT_MSG" | grep -oP 'Status: \K(IN_PROGRESS|COMPLETED|TESTING)')
    
    if [ ! -z "$STATUS" ]; then
        # Update task status
        TASK_FILE="dev/tasks/active/$TASK_ID/description.md"
        
        if [ -f "$TASK_FILE" ]; then
            # Create temporary file
            TEMP_FILE=$(mktemp)
            
            # Update status markers
            sed 's/- \[.\] '"$STATUS"'/- [x] '"$STATUS"'/' "$TASK_FILE" | \
            sed 's/- \[x\] \(NEW\|IN_PROGRESS\|REVIEW\|TESTING\|COMPLETED\)$/- [ ] \1/' | \
            sed '/^- \[.\] '"$STATUS"'$/s/- \[ \]/- [x]/' > "$TEMP_FILE"
            
            # Add single timestamp update
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
            echo "" >> "$TEMP_FILE"
            echo "- $TIMESTAMP: Status updated to $STATUS" >> "$TEMP_FILE"
            
            # Replace original file
            mv "$TEMP_FILE" "$TASK_FILE"
            
            # If status is COMPLETED, move to completed folder
            if [ "$STATUS" = "COMPLETED" ]; then
                MONTH_DIR="dev/tasks/completed/$(date '+%Y-%m')"
                mkdir -p "$MONTH_DIR"
                mv "$TASK_FILE" "$MONTH_DIR/"
                rmdir "dev/tasks/active/$TASK_ID" 2>/dev/null
            fi
            
            # Stage the task file changes
            git add "$TASK_FILE"
            git commit --amend --no-edit --no-verify
        fi
    fi
fi
